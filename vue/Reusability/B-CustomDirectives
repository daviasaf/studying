- Você pode criar suas diretivas
- São objetos
```html
<template>
  <p v-highlight>Oi</p>
</template>
<script setup>
const vHighlight = {
  mounted:(el)=>{
    el.classList.add("highlight")
  }
}
</script>
```
- também pode declarar diretivas no main.js
```js
app.directive("highlight",{
    mounted:(el)=>{
        el.classList.add("highlight")
    }
})
```
```html
<template>
  <p v-highlight>Oi</p>
</template>
<script setup>
</script>

<style scoped>
  .highlight{
    color: yellow;
    background-color: black;
    padding: 10px;
  }
</style>
```
- não esqueça de usar o objeto "mounted:"
    - normalmente se escreve mounted:(el)=>lógicaEmCimaDoElemento(el)
- Quando usar custom directives?
    - quando a funcionalidade só pode sera alcançada com a manipulação do DOM

- Uma diretiva criada pode receber varios métodos, além do mounted
```js
// called before bound element's attributes
  // or event listeners are applied
  created(el, binding, vnode) {
    // see below for details on arguments
  },
  // called right before the element is inserted into the DOM.
  beforeMount(el, binding, vnode) {},
  // called when the bound element's parent component
  // and all its children are mounted.
  mounted(el, binding, vnode) {},
  // called before the parent component is updated
  beforeUpdate(el, binding, vnode, prevVnode) {},
  // called after the parent component and
  // all of its children have updated
  updated(el, binding, vnode, prevVnode) {},
  // called before the parent component is unmounted
  beforeUnmount(el, binding, vnode) {},
  // called when the parent component is unmounted
  unmounted(el, binding, vnode) {}
  ```
  **Leia quando for preciso** 
  

  - Não modifique o EL
  - é comum que a nossa diretiva tenha o mesmo comportamento para update e mounted, por isso, nao precisamos especificar na hora de crialas, apenas passe uma função
  ```js
    app.directive('color', (el, biding) => {
        el.style.color = biding.value
    })
  ``` 
  - custom directivas também pode receber objetos

  ```html
    <p v-styling='{color:"red", fontSize=16}' ></p>
  ```
  ```js
    app.directive("styling", (el,biding)=>{
        el.style.color = biding.value.color
        el.style.fontSize = biding.value.fontSize+'px'
    })
  ```
  - Não utilize custom directives em componentes